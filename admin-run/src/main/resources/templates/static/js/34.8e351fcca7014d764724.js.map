{"version":3,"sources":["webpack:///src/views/pms/product/index.vue","webpack:///./src/api/server.js","webpack:///./src/views/pms/product/index.vue?6788","webpack:///./src/views/pms/product/index.vue"],"names":["defaultListQuery","startId","toId","name","ip","creatBy","updateBy","startCreateTime","toCreateTime","pageNum","pageSize","defaultServer","id","port","account","createBy","createTime","product","data","listQuery","assign_default","list","total","listLoading","dialogVisible","server","isEdit","allocDialogVisible","status","created","this","getList","filters","formatDateTime","time","date","Date","Object","utils_date","methods","handleResetSearch","handleSearchList","handleSizeChange","val","handleCurrentChange","handleAdd","handleTest","index","row","request","url","method","then","response","code","ping","handleDelete","_this","$confirm","confirmButtonText","cancelButtonText","type","$message","message","handleUpdate","handleDialogConfirm","_this2","createServer","params","_this3","pms_product","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","shadow","_v","staticStyle","float","size","on","click","$event","margin-right","margin-top","inline","model","label-width","label","width","placeholder","value","callback","$$v","$set","expression","value-format","directives","rawName","ref","border","align","scopedSlots","_u","key","fn","scope","_s","$index","background","layout","page-size","page-sizes","current-page","size-change","current-change","update:currentPage","title","visible","update:visible","slot","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/34.8e351fcca7014d764724.js","sourcesContent":["<template> \n  <div class=\"app-container\">\n    <el-card class=\"filter-container\" shadow=\"never\">\n      <div>\n        <i class=\"el-icon-search\"></i>\n        <span>筛选搜索</span>\n        <el-button\n          style=\"float: right\"\n          @click=\"handleSearchList()\"\n          type=\"primary\"\n          size=\"small\">\n          查询结果\n        </el-button>\n        <el-button\n          style=\"float: right;margin-right: 15px\"\n          @click=\"handleResetSearch()\"\n          size=\"small\">\n          重置\n        </el-button>\n      </div>\n      <div style=\"margin-top: 15px\">\n        <el-form :inline=\"true\" :model=\"listQuery\" size=\"small\" label-width=\"140px\">\n          <el-form-item label=\"输入搜索：\">\n            <el-input style=\"width: 203px\" v-model=\"listQuery.keyword\" placeholder=\"服务器名称\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"id范围：\">\n            <el-input style=\"width: 203px\" v-model=\"listQuery.startId\" placeholder=\"id最小值\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"id范围：\">\n            <el-input style=\"width: 203px\" v-model=\"listQuery.toId\" placeholder=\"id最大值\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"IP：\">\n            <el-input style=\"width: 203px\" v-model=\"listQuery.ip\" placeholder=\"服务器名称, 如: 0.0.0.0\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"创建人：\">\n            <el-input style=\"width: 203px\" v-model=\"listQuery.creatBy\" placeholder=\"创建人账号\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"创建时间范围：\">\n            <el-date-picker\n              style=\"width: 203px\"\n              v-model=\"listQuery.startCreateTime\"\n              value-format=\"yyyy-MM-dd\"\n              type=\"date\"\n              placeholder=\"请选择最早时间\">\n            </el-date-picker>\n          </el-form-item>\n          <el-form-item label=\"创建时间范围：\">\n            <el-date-picker\n              style=\"width: 203px\"\n              v-model=\"listQuery.toCreateTime\"\n              value-format=\"yyyy-MM-dd\"\n              type=\"date\"\n              placeholder=\"请选择最晚时间\">\n            </el-date-picker>\n          </el-form-item>\n          <!--\n          <el-form-item label=\"商品分类：\">\n            <el-cascader\n              clearable\n              v-model=\"selectProductCateValue\"\n              :options=\"productCateOptions\">\n            </el-cascader>\n          </el-form-item>\n          <el-form-item label=\"商品品牌：\">\n            <el-select v-model=\"listQuery.brandId\" placeholder=\"请选择品牌\" clearable>\n              <el-option\n                v-for=\"item in brandOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"上架状态：\">\n            <el-select v-model=\"listQuery.publishStatus\" placeholder=\"全部\" clearable>\n              <el-option\n                v-for=\"item in publishStatusOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"审核状态：\">\n            <el-select v-model=\"listQuery.verifyStatus\" placeholder=\"全部\" clearable>\n              <el-option\n                v-for=\"item in verifyStatusOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          -->\n        </el-form>\n      </div>\n    </el-card>\n    <el-card class=\"operate-container\" shadow=\"never\">\n      <i class=\"el-icon-tickets\"></i>\n      <span>数据列表</span>\n      <el-button\n        class=\"btn-add\"\n        @click=\"handleAdd()\"\n        size=\"mini\">\n        添加\n      </el-button>\n    </el-card>\n    <div class=\"table-container\">\n      <el-table ref=\"serverTable\"\n                :data=\"list\"\n                style=\"width: 100%\"\n                v-loading=\"listLoading\"\n                border>\n        <el-table-column type=\"selection\" width=\"60\" align=\"center\"></el-table-column>\n        <el-table-column label=\"编号\" width=\"100\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.id}}</template>\n        </el-table-column>\n        <el-table-column label=\"名称\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.name}}</template>\n        </el-table-column>\n        <el-table-column label=\"IP\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.ip}}</template>\n        </el-table-column>\n        <el-table-column label=\"端口\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.port}}</template>\n        </el-table-column>\n        <el-table-column label=\"账号\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.account}}</template>\n        </el-table-column>\n        <el-table-column label=\"创建人\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.createBy}}</template>\n        </el-table-column>\n        <el-table-column label=\"创建时间\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.createTime}}</template>\n        </el-table-column>\n        <!--\n        <el-table-column label=\"SKU库存\" width=\"100\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"handleShowSkuEditDialog(scope.$index, scope.row)\" circle></el-button>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"销量\" width=\"100\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.sale}}</template>\n        </el-table-column>\n        <el-table-column label=\"审核状态\" width=\"100\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <p>{{scope.row.verifyStatus | verifyStatusFilter}}</p>\n            <p>\n              <el-button\n                type=\"text\"\n                @click=\"handleShowVerifyDetail(scope.$index, scope.row)\">审核详情\n              </el-button>\n            </p>\n          </template>\n        </el-table-column>\n        -->\n        <el-table-column label=\"延迟测试\" align=\"center\">\n          <template slot-scope=\"scope\">\n            {{scope.row.ping}}\n            <el-button size=\"mini\"\n                       type=\"text\"\n                       @click=\"handleTest(scope.$index, scope.row)\">编辑\n            </el-button>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"160\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\"\n                       type=\"text\"\n                       @click=\"handleUpdate(scope.$index, scope.row)\">编辑\n            </el-button>\n            <el-button size=\"mini\"\n                       type=\"text\"\n                       @click=\"handleDelete(scope.$index, scope.row)\">删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div class=\"pagination-container\">\n      <el-pagination\n        background\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        layout=\"total, sizes,prev, pager, next,jumper\"\n        :page-size=\"listQuery.pageSize\"\n        :page-sizes=\"[5,10,15]\"\n        :current-page.sync=\"listQuery.pageNum\"\n        :total=\"total\">\n      </el-pagination>\n    </div>\n    <el-dialog\n      :title=\"isEdit?'编辑服务器':'添加服务器'\"\n      :visible.sync=\"dialogVisible\"\n      width=\"40%\">\n      <el-form :model=\"server\"\n               ref=\"serverForm\"\n               label-width=\"150px\" size=\"small\">\n        <el-form-item label=\"服务器名称：\">\n          <el-input v-model=\"server.name\" style=\"width: 250px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"服务器IP：\">\n          <el-input v-model=\"server.ip\" style=\"width: 250px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"服务器账号：\">\n          <el-input v-model=\"server.account\" style=\"width: 250px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"服务器端口：\">\n          <el-input v-model=\"server.port\" style=\"width: 250px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"服务器密码：\">\n          <el-input v-model=\"server.password\"  type=\"password\" style=\"width: 250px\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\" size=\"small\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleDialogConfirm()\" size=\"small\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\n  import {\n    fetchList,\n    createServer,\n    updateServer,\n    testServer,\n    download,\n    deleteServers\n  } from '@/api/server'\n  import {formatDate} from \"../../../utils/date\";\n  import {deleteServer} from \"../../../api/server\";\n\n  const defaultListQuery = {\n    startId: null,\n    toId: null,\n    name: null,\n    ip: null,\n    creatBy: null,\n    updateBy: null,\n    startCreateTime: null,\n    toCreateTime: null,\n    pageNum: 1,\n    pageSize: 5\n  };\n\n  const defaultServer = {\n    id: null,\n    name: null,\n    ip: null,\n    port: null,\n    account: null,\n    createBy: null,\n    createTime: null\n  }\n\n  export default {\n    name: 'serverList',\n    data() {\n      return {\n        listQuery: Object.assign({}, defaultListQuery),\n        list: null,\n        total: null,\n        listLoading: false,\n        dialogVisible: false,\n        server: Object.assign({}, defaultServer),\n        isEdit: false,\n        allocDialogVisible: false,\n        status: false\n      }\n    },\n    created() {\n      this.getList();\n    },\n    filters: {\n      formatDateTime(time) {\n        if (time == null || time === '') {\n          return 'N/A';\n        }\n        let date = new Date(time);\n        return formatDate(date, 'yyyy-MM-dd hh:mm:ss')\n      }\n    },\n    methods: {\n      handleResetSearch() {\n        this.listQuery = Object.assign({}, defaultListQuery);\n      },\n      handleSearchList() {\n        this.listQuery.pageNum = 1;\n        this.getList();\n      },\n      handleSizeChange(val) {\n        this.listQuery.pageNum = 1;\n        this.listQuery.pageSize = val;\n        this.getList();\n      },\n      handleCurrentChange(val) {\n        this.listQuery.pageNum = val;\n        this.getList();\n      },\n      handleAdd() {\n        this.dialogVisible = true;\n        this.isEdit = false;\n        this.server = Object.assign({},defaultServer);\n      },\n      handleTest(index, row) {\n        testServer(row.id).then(response => {\n          if(response.code === 200) {\n            row.ping = response.data;\n          } else {\n            row.ping = \"oo\";\n          }\n        })\n      }\n      ,\n      /**\n      handleStatusChange(index, row) {\n        this.$confirm('是否要修改该状态?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          updateStatus(row.id, {status: row.status}).then(response => {\n            this.$message({\n              type: 'success',\n              message: '修改成功!'\n            });\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消修改'\n          });\n          this.getList();\n        });\n      },\n       **/\n      handleDelete(index, row) {\n        this.$confirm('是否要删除该服务器?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          deleteServer(row.id).then(response => {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.getList();\n          });\n        });\n      },\n      handleUpdate(index, row) {\n        this.dialogVisible = true;\n        this.isEdit = true;\n        this.server = Object.assign({},row);\n      },\n      handleDialogConfirm() {\n        this.$confirm('是否要确认?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          if (this.isEdit) {\n            updateServer(this.server.id,this.server).then(response => {\n              this.$message({\n                message: '修改成功！',\n                type: 'success'\n              });\n              this.dialogVisible =false;\n              this.getList();\n            })\n          } else {\n            createServer(this.server).then(response => {\n              this.$message({\n                message: '添加成功！',\n                type: 'success'\n              });\n              this.dialogVisible =false;\n              this.getList();\n            })\n          }\n        })\n      },\n      getList() {\n        this.listLoading = true;\n        fetchList(this.listQuery).then(response => {\n          this.listLoading = false;\n          this.list = response.data.list;\n          this.total = response.data.total;\n        });\n      }\n    }\n  }\n  /**\n  export default {\n    name: \"productList\",\n    data() {\n      return {\n        editSkuInfo:{\n          dialogVisible:false,\n          productId:null,\n          productSn:'',\n          productAttributeCategoryId:null,\n          stockList:[],\n          productAttr:[],\n          keyword:null\n        },\n        operates: [\n          {\n            label: \"商品上架\",\n            value: \"publishOn\"\n          },\n          {\n            label: \"商品下架\",\n            value: \"publishOff\"\n          },\n          {\n            label: \"设为推荐\",\n            value: \"recommendOn\"\n          },\n          {\n            label: \"取消推荐\",\n            value: \"recommendOff\"\n          },\n          {\n            label: \"设为新品\",\n            value: \"newOn\"\n          },\n          {\n            label: \"取消新品\",\n            value: \"newOff\"\n          },\n          {\n            label: \"转移到分类\",\n            value: \"transferCategory\"\n          },\n          {\n            label: \"移入回收站\",\n            value: \"recycle\"\n          }\n        ],\n        operateType: null,\n        listQuery: Object.assign({}, defaultListQuery),\n        list: null,\n        total: null,\n        listLoading: true,\n        selectProductCateValue: null,\n        multipleSelection: [],\n        productCateOptions: [],\n        brandOptions: [],\n        publishStatusOptions: [{\n          value: 1,\n          label: '上架'\n        }, {\n          value: 0,\n          label: '下架'\n        }],\n        verifyStatusOptions: [{\n          value: 1,\n          label: '审核通过'\n        }, {\n          value: 0,\n          label: '未审核'\n        }]\n      }\n    },\n    created() {\n      this.getList();\n      this.getBrandList();\n      this.getProductCateList();\n    },\n    watch: {\n      selectProductCateValue: function (newValue) {\n        if (newValue != null && newValue.length == 2) {\n          this.listQuery.productCategoryId = newValue[1];\n        } else {\n          this.listQuery.productCategoryId = null;\n        }\n\n      }\n    },\n    filters: {\n      verifyStatusFilter(value) {\n        if (value === 1) {\n          return '审核通过';\n        } else {\n          return '未审核';\n        }\n      }\n    },\n    methods: {\n      getProductSkuSp(row, index) {\n        let spData = JSON.parse(row.spData);\n        if(spData!=null&&index<spData.length){\n          return spData[index].value;\n        }else{\n          return null;\n        }\n      },\n      getList() {\n        this.listLoading = true;\n        fetchList(this.listQuery).then(response => {\n          this.listLoading = false;\n          this.list = response.data.list;\n          this.total = response.data.total;\n        });\n      },\n      getBrandList() {\n        fetchBrandList({pageNum: 1, pageSize: 100}).then(response => {\n          this.brandOptions = [];\n          let brandList = response.data.list;\n          for (let i = 0; i < brandList.length; i++) {\n            this.brandOptions.push({label: brandList[i].name, value: brandList[i].id});\n          }\n        });\n      },\n      getProductCateList() {\n        fetchListWithChildren().then(response => {\n          let list = response.data;\n          this.productCateOptions = [];\n          for (let i = 0; i < list.length; i++) {\n            let children = [];\n            if (list[i].children != null && list[i].children.length > 0) {\n              for (let j = 0; j < list[i].children.length; j++) {\n                children.push({label: list[i].children[j].name, value: list[i].children[j].id});\n              }\n            }\n            this.productCateOptions.push({label: list[i].name, value: list[i].id, children: children});\n          }\n        });\n      },\n      handleShowSkuEditDialog(index,row){\n        this.editSkuInfo.dialogVisible=true;\n        this.editSkuInfo.productId=row.id;\n        this.editSkuInfo.productSn=row.productSn;\n        this.editSkuInfo.productAttributeCategoryId = row.productAttributeCategoryId;\n        this.editSkuInfo.keyword=null;\n        fetchSkuStockList(row.id,{keyword:this.editSkuInfo.keyword}).then(response=>{\n          this.editSkuInfo.stockList=response.data;\n        });\n        if(row.productAttributeCategoryId!=null){\n          fetchProductAttrList(row.productAttributeCategoryId,{type:0}).then(response=>{\n            this.editSkuInfo.productAttr=response.data.list;\n          });\n        }\n      },\n      handleSearchEditSku(){\n        fetchSkuStockList(this.editSkuInfo.productId,{keyword:this.editSkuInfo.keyword}).then(response=>{\n          this.editSkuInfo.stockList=response.data;\n        });\n      },\n      handleEditSkuConfirm(){\n        if(this.editSkuInfo.stockList==null||this.editSkuInfo.stockList.length<=0){\n          this.$message({\n            message: '暂无sku信息',\n            type: 'warning',\n            duration: 1000\n          });\n          return\n        }\n        this.$confirm('是否要进行修改', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(()=>{\n          updateSkuStockList(this.editSkuInfo.productId,this.editSkuInfo.stockList).then(response=>{\n            this.$message({\n              message: '修改成功',\n              type: 'success',\n              duration: 1000\n            });\n            this.editSkuInfo.dialogVisible=false;\n          });\n        });\n      },\n      handleSearchList() {\n        this.listQuery.pageNum = 1;\n        this.getList();\n      },\n      handleUpdate() {\n\n      }\n      ,\n      handleAddProduct() {\n        this.$router.push({path:'/pms/addProduct'});\n      },\n      handleBatchOperate() {\n        if(this.operateType==null){\n          this.$message({\n            message: '请选择操作类型',\n            type: 'warning',\n            duration: 1000\n          });\n          return;\n        }\n        if(this.multipleSelection==null||this.multipleSelection.length<1){\n          this.$message({\n            message: '请选择要操作的商品',\n            type: 'warning',\n            duration: 1000\n          });\n          return;\n        }\n        this.$confirm('是否要进行该批量操作?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          let ids=[];\n          for(let i=0;i<this.multipleSelection.length;i++){\n            ids.push(this.multipleSelection[i].id);\n          }\n          switch (this.operateType) {\n            case this.operates[0].value:\n              this.updatePublishStatus(1,ids);\n              break;\n            case this.operates[1].value:\n              this.updatePublishStatus(0,ids);\n              break;\n            case this.operates[2].value:\n              this.updateRecommendStatus(1,ids);\n              break;\n            case this.operates[3].value:\n              this.updateRecommendStatus(0,ids);\n              break;\n            case this.operates[4].value:\n              this.updateNewStatus(1,ids);\n              break;\n            case this.operates[5].value:\n              this.updateNewStatus(0,ids);\n              break;\n            case this.operates[6].value:\n              break;\n            case this.operates[7].value:\n              this.updateDeleteStatus(1,ids);\n              break;\n            default:\n              break;\n          }\n          this.getList();\n        });\n      },\n      handleSizeChange(val) {\n        this.listQuery.pageNum = 1;\n        this.listQuery.pageSize = val;\n        this.getList();\n      },\n      handleCurrentChange(val) {\n        this.listQuery.pageNum = val;\n        this.getList();\n      },\n      handleSelectionChange(val) {\n        this.multipleSelection = val;\n      },\n      handlePublishStatusChange(index, row) {\n        let ids = [];\n        ids.push(row.id);\n        this.updatePublishStatus(row.publishStatus, ids);\n      },\n      handleNewStatusChange(index, row) {\n        let ids = [];\n        ids.push(row.id);\n        this.updateNewStatus(row.newStatus, ids);\n      },\n      handleRecommendStatusChange(index, row) {\n        let ids = [];\n        ids.push(row.id);\n        this.updateRecommendStatus(row.recommandStatus, ids);\n      },\n      handleResetSearch() {\n        this.selectProductCateValue = [];\n        this.listQuery = Object.assign({}, defaultListQuery);\n      },\n      handleDelete(index, row){\n        this.$confirm('是否要进行删除操作?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          let ids = [];\n          ids.push(row.id);\n          this.updateDeleteStatus(1,ids);\n        });\n      },\n      handleUpdateProduct(index,row){\n        this.$router.push({path:'/pms/updateProduct',query:{id:row.id}});\n      },\n      handleShowProduct(index,row){\n        console.log(\"handleShowProduct\",row);\n      },\n      handleShowVerifyDetail(index,row){\n        console.log(\"handleShowVerifyDetail\",row);\n      },\n      handleShowLog(index,row){\n        console.log(\"handleShowLog\",row);\n      },\n      updatePublishStatus(publishStatus, ids) {\n        let params = new URLSearchParams();\n        params.append('ids', ids);\n        params.append('publishStatus', publishStatus);\n        updatePublishStatus(params).then(response => {\n          this.$message({\n            message: '修改成功',\n            type: 'success',\n            duration: 1000\n          });\n        });\n      },\n      updateNewStatus(newStatus, ids) {\n        let params = new URLSearchParams();\n        params.append('ids', ids);\n        params.append('newStatus', newStatus);\n        updateNewStatus(params).then(response => {\n          this.$message({\n            message: '修改成功',\n            type: 'success',\n            duration: 1000\n          });\n        });\n      },\n      updateRecommendStatus(recommendStatus, ids) {\n        let params = new URLSearchParams();\n        params.append('ids', ids);\n        params.append('recommendStatus', recommendStatus);\n        updateRecommendStatus(params).then(response => {\n          this.$message({\n            message: '修改成功',\n            type: 'success',\n            duration: 1000\n          });\n        });\n      },\n      updateDeleteStatus(deleteStatus, ids) {\n        let params = new URLSearchParams();\n        params.append('ids', ids);\n        params.append('deleteStatus', deleteStatus);\n        updateDeleteStatus(params).then(response => {\n          this.$message({\n            message: '删除成功',\n            type: 'success',\n            duration: 1000\n          });\n        });\n        this.getList();\n      }\n    }\n  }\n   **/\n</script>\n<style></style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/views/pms/product/index.vue","import request from '@/utils/request'\n\nexport function fetchList(params) {\n  return request({\n    url: '/api/server',\n    method: 'get',\n    params: params\n  })\n}\n\nexport function testServer(id) {\n  return request({\n    url: '/api/server/test/' + id,\n    method: 'get'\n  })\n}\n\nexport function createServer(data) {\n  return request({\n    url: '/api/server',\n    method: 'post',\n    data: data\n  })\n}\n\nexport function updateServer(id, data) {\n  return request({\n    url: '/api/server/' + id,\n    method: 'put',\n    data: data\n  })\n}\n\nexport function download(params) {\n  return request({\n    url: '/api/server/download',\n    method: 'get',\n    params: params\n  })\n}\n\nexport function deleteServer(id) {\n  return request({\n    url: '/api/server/' + id,\n    method: 'delete'\n  })\n}\n\nexport function deleteServers(ids) {\n  return request({\n    url: '/api/server',\n    method: 'delete',\n    data: ids\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/server.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('el-card',{staticClass:\"filter-container\",attrs:{\"shadow\":\"never\"}},[_c('div',[_c('i',{staticClass:\"el-icon-search\"}),_vm._v(\" \"),_c('span',[_vm._v(\"筛选搜索\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){_vm.handleSearchList()}}},[_vm._v(\"\\n        查询结果\\n      \")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"margin-right\":\"15px\"},attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.handleResetSearch()}}},[_vm._v(\"\\n        重置\\n      \")])],1),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"15px\"}},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.listQuery,\"size\":\"small\",\"label-width\":\"140px\"}},[_c('el-form-item',{attrs:{\"label\":\"输入搜索：\"}},[_c('el-input',{staticStyle:{\"width\":\"203px\"},attrs:{\"placeholder\":\"服务器名称\"},model:{value:(_vm.listQuery.keyword),callback:function ($$v) {_vm.$set(_vm.listQuery, \"keyword\", $$v)},expression:\"listQuery.keyword\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"id范围：\"}},[_c('el-input',{staticStyle:{\"width\":\"203px\"},attrs:{\"placeholder\":\"id最小值\"},model:{value:(_vm.listQuery.startId),callback:function ($$v) {_vm.$set(_vm.listQuery, \"startId\", $$v)},expression:\"listQuery.startId\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"id范围：\"}},[_c('el-input',{staticStyle:{\"width\":\"203px\"},attrs:{\"placeholder\":\"id最大值\"},model:{value:(_vm.listQuery.toId),callback:function ($$v) {_vm.$set(_vm.listQuery, \"toId\", $$v)},expression:\"listQuery.toId\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"IP：\"}},[_c('el-input',{staticStyle:{\"width\":\"203px\"},attrs:{\"placeholder\":\"服务器名称, 如: 0.0.0.0\"},model:{value:(_vm.listQuery.ip),callback:function ($$v) {_vm.$set(_vm.listQuery, \"ip\", $$v)},expression:\"listQuery.ip\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"创建人：\"}},[_c('el-input',{staticStyle:{\"width\":\"203px\"},attrs:{\"placeholder\":\"创建人账号\"},model:{value:(_vm.listQuery.creatBy),callback:function ($$v) {_vm.$set(_vm.listQuery, \"creatBy\", $$v)},expression:\"listQuery.creatBy\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"创建时间范围：\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"203px\"},attrs:{\"value-format\":\"yyyy-MM-dd\",\"type\":\"date\",\"placeholder\":\"请选择最早时间\"},model:{value:(_vm.listQuery.startCreateTime),callback:function ($$v) {_vm.$set(_vm.listQuery, \"startCreateTime\", $$v)},expression:\"listQuery.startCreateTime\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"创建时间范围：\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"203px\"},attrs:{\"value-format\":\"yyyy-MM-dd\",\"type\":\"date\",\"placeholder\":\"请选择最晚时间\"},model:{value:(_vm.listQuery.toCreateTime),callback:function ($$v) {_vm.$set(_vm.listQuery, \"toCreateTime\", $$v)},expression:\"listQuery.toCreateTime\"}})],1)],1)],1)]),_vm._v(\" \"),_c('el-card',{staticClass:\"operate-container\",attrs:{\"shadow\":\"never\"}},[_c('i',{staticClass:\"el-icon-tickets\"}),_vm._v(\" \"),_c('span',[_vm._v(\"数据列表\")]),_vm._v(\" \"),_c('el-button',{staticClass:\"btn-add\",attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.handleAdd()}}},[_vm._v(\"\\n      添加\\n    \")])],1),_vm._v(\" \"),_c('div',{staticClass:\"table-container\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],ref:\"serverTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.list,\"border\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"60\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"编号\",\"width\":\"100\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(scope.row.id))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"名称\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(scope.row.name))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"IP\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(scope.row.ip))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"端口\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(scope.row.port))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"账号\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(scope.row.account))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"创建人\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(scope.row.createBy))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"创建时间\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(scope.row.createTime))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"延迟测试\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n          \"+_vm._s(scope.row.ping)+\"\\n          \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"text\"},on:{\"click\":function($event){_vm.handleTest(scope.$index, scope.row)}}},[_vm._v(\"编辑\\n          \")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"160\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"text\"},on:{\"click\":function($event){_vm.handleUpdate(scope.$index, scope.row)}}},[_vm._v(\"编辑\\n          \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"text\"},on:{\"click\":function($event){_vm.handleDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\\n          \")])]}}])})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"pagination-container\"},[_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"total, sizes,prev, pager, next,jumper\",\"page-size\":_vm.listQuery.pageSize,\"page-sizes\":[5,10,15],\"current-page\":_vm.listQuery.pageNum,\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange,\"update:currentPage\":function($event){_vm.$set(_vm.listQuery, \"pageNum\", $event)}}})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.isEdit?'编辑服务器':'添加服务器',\"visible\":_vm.dialogVisible,\"width\":\"40%\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('el-form',{ref:\"serverForm\",attrs:{\"model\":_vm.server,\"label-width\":\"150px\",\"size\":\"small\"}},[_c('el-form-item',{attrs:{\"label\":\"服务器名称：\"}},[_c('el-input',{staticStyle:{\"width\":\"250px\"},model:{value:(_vm.server.name),callback:function ($$v) {_vm.$set(_vm.server, \"name\", $$v)},expression:\"server.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"服务器IP：\"}},[_c('el-input',{staticStyle:{\"width\":\"250px\"},model:{value:(_vm.server.ip),callback:function ($$v) {_vm.$set(_vm.server, \"ip\", $$v)},expression:\"server.ip\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"服务器账号：\"}},[_c('el-input',{staticStyle:{\"width\":\"250px\"},model:{value:(_vm.server.account),callback:function ($$v) {_vm.$set(_vm.server, \"account\", $$v)},expression:\"server.account\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"服务器端口：\"}},[_c('el-input',{staticStyle:{\"width\":\"250px\"},model:{value:(_vm.server.port),callback:function ($$v) {_vm.$set(_vm.server, \"port\", $$v)},expression:\"server.port\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"服务器密码：\"}},[_c('el-input',{staticStyle:{\"width\":\"250px\"},attrs:{\"type\":\"password\"},model:{value:(_vm.server.password),callback:function ($$v) {_vm.$set(_vm.server, \"password\", $$v)},expression:\"server.password\"}})],1)],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){_vm.handleDialogConfirm()}}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-73c8f65c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/pms/product/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-73c8f65c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-73c8f65c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/pms/product/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}