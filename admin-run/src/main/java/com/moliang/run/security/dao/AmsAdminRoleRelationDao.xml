<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moliang.run.security.dao.AmsAdminRoleRelationDao">
    <resultMap id="BaseResultMap" type="com.moliang.run.model.AmsAdminRoleRelation">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="admin_id" jdbcType="BIGINT" property="adminId" />
        <result column="role_id" jdbcType="BIGINT" property="roleId" />
    </resultMap>
    <sql id="Base_Column_List">
        id, admin_id, role_id
    </sql>
    <select id="getResourceList" resultType="com.moliang.run.model.AmsResource">
        SELECT
            ur.id id,
            ur.create_time createTime,
            ur.`name` `name`,
            ur.url url,
            ur.description description,
            ur.category_id categoryId
        FROM
            ams_admin_role_relation ar
                LEFT JOIN ams_role r ON ar.role_id = r.id
                LEFT JOIN ams_role_resource_relation rrr ON r.id = rrr.role_id
                LEFT JOIN ams_resource ur ON ur.id = rrr.resource_id
        WHERE
            ar.admin_id = #{adminId}
          AND ur.id IS NOT NULL
        GROUP BY
            ur.id
    </select>
    <select id="getAdminIdList" resultType="java.lang.Long">
        SELECT
            DISTINCT ar.admin_id
        FROM
            ums_role_resource_relation rr
                LEFT JOIN ums_admin_role_relation ar ON rr.role_id = ar.role_id
        WHERE rr.resource_id=#{resourceId}
    </select>
</mapper>