<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moliang.run.security.dao.AmsAdminDao">
    <resultMap id="BaseResultMap" type="com.moliang.run.model.AmsAdmin">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="note" jdbcType="VARCHAR" property="note" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
        <result column="status" jdbcType="INTEGER" property="status" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, username, password, icon, email, nick_name, note, create_time, login_time, status
    </sql>
    <select id="selectByExample" parameterType="com.moliang.run.model.AmsAdminExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        ad.id AS id, username, `password`, icon, email, nick_name, note,create_time, r.login_time AS login_time, `status`
        FROM ams_admin ad LEFT JOIN (
        SELECT a.id, MAX(al.create_time) AS login_time
        FROM ams_admin a LEFT JOIN ams_admin_login_log al ON a.id = al.admin_id
        GROUP BY a.id
        ) AS r
        ON ad.id = r.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="getMenuList" parameterType="java.lang.Long" resultType="com.moliang.run.model.AmsMenu">
        SELECT
            m.id id,
            m.parent_id parentId,
            m.create_time createTime,
            m.title title,
            m.level level,
            m.sort sort,
            m.name name,
            m.icon icon,
            m.hidden hidden
        FROM
            ams_admin_role_relation a
                LEFT JOIN ams_role_menu_relation r ON a.role_id = r.role_id
                LEFT JOIN ams_menu m ON r.menu_id = m.id
        WHERE
            a.admin_id = #{adminId}
          AND m.id IS NOT NULL
        GROUP BY
            m.id
    </select>
    <select id="getRoleList" parameterType="java.lang.Long" resultType="com.moliang.run.model.AmsRole">
        SELECT
            r.id id,
            r.`name` `name`,
            r.description description,
            r.create_time create_time,
            r.`status` `status`
        FROM
            ams_admin_role_relation a
                LEFT JOIN ams_role r ON r.id = a.role_id
        WHERE
            a.admin_id = #{adminId}
          AND r.id IS NOT NULL
        GROUP BY
            r.id
    </select>
</mapper>